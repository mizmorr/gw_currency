basePath: /api/v1
definitions:
  domain.AuthorizationRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  domain.DepositRequest:
    properties:
      amount:
        type: number
      currency:
        type: string
    required:
    - amount
    - currency
    type: object
  domain.ExchangeRequest:
    properties:
      amount:
        type: number
      base_currency:
        type: string
      target_currency:
        type: string
    required:
    - amount
    - base_currency
    - target_currency
    type: object
  domain.RefreshRequest:
    properties:
      tokenhash:
        type: string
    required:
    - tokenhash
    type: object
  domain.RegisterRequest:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  domain.WithdrawRequest:
    properties:
      amount:
        type: number
      currency:
        type: string
    required:
    - amount
    - currency
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a currency wallet service.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger API
  version: "1.0"
paths:
  /balance:
    get:
      description: Returns the balance of an authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: failed to get balance
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get user balance
      tags:
      - wallet
  /deposit:
    post:
      consumes:
      - application/json
      description: Deposits funds into the user's account
      parameters:
      - description: Deposit data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/domain.DepositRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: invalid request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: failed to deposit
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Deposit funds
      tags:
      - wallet
  /exchange:
    post:
      consumes:
      - application/json
      description: Exchanges one currency for another
      parameters:
      - description: Exchange data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/domain.ExchangeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: exchange failed
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Exchange currency
      tags:
      - exchange
  /exchange-rates:
    get:
      description: Fetches the latest exchange rates
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: failed to get exchange rates
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get exchange rates
      tags:
      - exchange
  /login:
    post:
      consumes:
      - application/json
      description: Authenticates a user and returns JWT tokens
      parameters:
      - description: User credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/domain.AuthorizationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: invalid credentials
          schema:
            additionalProperties:
              type: string
            type: object
      summary: User login
      tags:
      - auth
  /refresh:
    post:
      consumes:
      - application/json
      description: Refreshes the user's access token using a refresh token
      parameters:
      - description: Refresh token data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/domain.RefreshRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: invalid request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: invalid refresh token
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Refresh access token
      tags:
      - auth
  /register:
    post:
      consumes:
      - application/json
      description: Registers a new user with the provided credentials
      parameters:
      - description: User registration data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/domain.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: user registered successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: invalid request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new user
      tags:
      - auth
  /withdraw:
    post:
      consumes:
      - application/json
      description: Withdraws funds from the user's account
      parameters:
      - description: Withdraw data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/domain.WithdrawRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: invalid request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: failed to withdraw
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Withdraw funds
      tags:
      - wallet
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
